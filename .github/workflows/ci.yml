name: Project CI
on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cancel-prev-runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - cancel-prev-runs
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm i --prefer-offline

  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - install-dependencies
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm i --prefer-offline

      - name: Compile
        run: npm run compile

      - name: CheckStyle
        run: npm run checkstyle

      - name: CheckStyle
        run: npm run checkstyle

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm i --prefer-offline

      - name: Run Unit Test
        run: npm run test:unit

  integrated-test:
    name: Integrated Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm i --prefer-offline

      - name: Run Integrated Test
        run: npm run test:integrated

  e2e-test:
    name: End-to-End Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm i --prefer-offline

      - name: Run End-to-End Test
        run: npm run test:e2e

  coverage-test:
    name: End-to-End Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm i --prefer-offline

      - name: Run End-to-End Test
        run: npm run test:coverage

  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    needs:
     - validate
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - eslint
      - coverage-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.exclusions=**/*.test.ts,**/*.test.tsx,.github/**/*, **/setupTests.ts
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,.github/**/*, **/setupTests.ts
            -Dsonar.organization=paulushcgcj-github
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.cobertura.reportPaths=coverage/cobertura-coverage.xml
            -Dsonar.project.monorepo.enabled=false
            -Dsonar.projectKey=paulushcgcj_simple-front
            -Dsonar.sources=.
            -Dsonar.tests=src/